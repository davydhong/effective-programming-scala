[0m[[0m[0mdebug[0m] [0m[0m> Exec(collectAnalyses, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Processing event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / collectAnalyses[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: bloop.integrations.sbt.Offloader$$anon$1@2b3e2039, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: initialized: JsonRpcNotificationMessage(2.0, initialized, {})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///Users/davidhong/Learn/week_1/src/main/scala/org/epfl/03_video-streaming/VideoStreaming.worksheet.sc","languageId":"scala","version":1,"text":"enum Network:\n  case Fixed, Mobile\n\ncase class Experience(duration: Int, definition: Double, network: Network)\n\nval lowQuality  = 0.3 // MB/s\nval highQuality = 0.6 // MB/s\n\nval thirtyMinutes = 30 * 60 // seconds\n\nval highQualityAndMobile =\n  Experience(thirtyMinutes, highQuality, Network.Mobile)\nval lowQualityAndFixed =\n  Experience(thirtyMinutes, lowQuality, Network.Fixed)\n\nval dataCenterEnergy = 0.000072 // Units\nval kgCO2perkWh = 0.5           // kg CO2 emitted per kWh consumed\n\ndef networkEnergy(network: Network) = network match\n  case Network.Mobile => 0.00088\n  case Network.Fixed  => 0.00043\n\ndef footprint(experience: Experience): Double =\n  val megabytes = experience.duration * experience.definition\n  val energy    = dataCenterEnergy + networkEnergy(experience.network)\n  energy * megabytes * kgCO2perkWh\n\nfootprint(highQualityAndMobile)\n\nfootprint(lowQualityAndFixed)\n"}})[0m
[0m[[0m[0minfo[0m] [0m[0mUpdating [0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":3,"message":"Updating "})[0m
[0m[[0m[0minfo[0m] [0m[0mResolved  dependencies[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":3,"message":"Resolved  dependencies"})[0m
[0m[[0m[0minfo[0m] [0m[0mFetching artifacts of [0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":3,"message":"Fetching artifacts of "})[0m
[0m[[0m[0minfo[0m] [0m[0mFetched artifacts of [0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":3,"message":"Fetched artifacts of "})[0m
[0m[[0m[0mdebug[0m] [0m[0manalysis location (/Users/davidhong/Learn/week_1/target/scala-3/zinc/inc_compile_3.zip,true)[0m
[0m[[0m[32msuccess[0m] [0m[0mTotal time: 2 s, completed Nov 12, 2021 1:20:32 AM[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Done event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mForcing garbage collection...[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled request received: shutdown: JsonRpcRequestMessage(2.0, â™¨1, shutdown, null})[0m
